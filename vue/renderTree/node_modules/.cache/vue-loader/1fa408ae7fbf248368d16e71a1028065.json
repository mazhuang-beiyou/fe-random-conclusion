{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xingyuzhao/Desktop/study/conclusion/vue/renderTree/index.vue?vue&type=style&index=0&id=6de5ab34&scoped=true&lang=css&","dependencies":[{"path":"/Users/xingyuzhao/Desktop/study/conclusion/vue/renderTree/index.vue","mtime":1612513496653},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaW5wdXQgewogICAgd2lkdGg6IDUwMHB4Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA","file":"index.vue","sourceRoot":".","sourcesContent":["<template>\n    <div>\n        <input class=\"input\" v-model=\"nums\">\n        <node :nodeData=\"treeData\" />\n    </div>\n</template>\n\n<script>\nimport node from './node.vue'\nclass treeNode {\n    constructor(val) {\n        this.val = val\n        this.left = null\n        this.right = null\n    }\n}\nexport default {\n    components: {\n        node\n    },\n    data() {\n        return {\n            nums: '1, 2, 3, 4, 5, 6, 7',\n            treeData: null\n        };\n    },\n    computed: {\n        treeArr() {\n            return this.nums.split(',')\n        }\n    },\n    watch: {\n        nums() {\n            this.construct()\n        }\n    },\n    created() {\n        this.construct()\n    },\n    methods: {\n        construct() {\n            this.treeData = new treeNode(this.treeArr[0])\n            this.build(this.treeData, 0)\n        },\n        build(node, index) {\n                if (!node) return\n                const left = index * 2 + 1\n                if (this.treeArr[left]) {\n                    node.left = new treeNode(this.treeArr[left])\n                    this.build(node.left, left)\n                }\n                const right = this.treeArr[index*2+2]\n                if (right) {\n                    node.right = new treeNode(right)\n                    this.build(node.right, index*2+2)\n                }\n            }\n    }\n};\n</script>\n\n<style scoped>\n.input {\n    width: 500px;\n}\n</style>\n"]}]}